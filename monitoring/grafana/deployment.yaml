---
# Source: grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-6.48.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "9.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
      annotations:
        checksum/config: 00966b83132278ad40184c588ff70cdc98981c1083217d6856a6b0df71dbddf9
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: 3b94e74e96e310c833b10792c489d35698b8e2accd6661de4307bcb0b9810318
    spec:
      
      serviceAccountName: grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      enableServiceLinks: true
      containers:
        - name: grafana
          image: "grafana/grafana:9.3.1"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 150m
              memory: 150Mi
            limits:
              cpu: 250m
              memory: 250Mi
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yml"
              subPath: datasources.yml
              readOnly: true
            - name: config
              mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yml"
              subPath: dashboardproviders.yml
            - name: nginx-dashboards
              mountPath: "/var/lib/grafana/dashboards/nginx"
            - name: k8s-dashboards
              mountPath: "/var/lib/grafana/dashboards/kubernetes"
            - name: jenkins-dashboards
              mountPath: "/var/lib/grafana/dashboards/jenkins"
            - name: sonarqube-dashboards
              mountPath: "/var/lib/grafana/dashboards/sonarqube"
            - name: istio-dashboards
              mountPath: "/var/lib/grafana/dashboards/istio"
            - name: storage
              mountPath: "/var/lib/grafana"
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: nginx-dashboards
          configMap:  
            name: grafana-nginx-dashboards
        - name: k8s-dashboards
          configMap:
            name: grafana-k8s-dashboards
        - name: jenkins-dashboards
          configMap:
            name: grafana-jenkins-dashboards
        - name: sonarqube-dashboards
          configMap:
            name: grafana-sonarqube-dashboards
        - name: istio-dashboards
          configMap:
            name: grafana-istio-dashboards
        - name: storage
          emptyDir: {}
