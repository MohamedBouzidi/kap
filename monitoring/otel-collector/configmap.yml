apiVersion: v1
kind: ConfigMap
metadata:
  name: opentelemetry-collector-config
  namespace: monitoring
  labels:
    app: opentelemetry-collector
    release: opentelemetry-collector
data:
  collector-config: |
    connectors:
      spanmetrics:
        histogram:
          explicit:
            buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
        dimensions:
          - name: http.method
            default: GET
          - name: http.status_code
        dimensions_cache_size: 1000
        aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"    
        metrics_flush_interval: 15s 

    receivers:
      otlp:
        protocols:
          http:
            endpoint: ${env:MY_POD_IP}:4318

    processors:
      batch:
        send_batch_size: 1000
        timeout: 5s
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25

    extensions:
      health_check: {}
      memory_ballast:
        size_in_percentage: 40

    exporters:
      otlphttp:
        endpoint: http://jaeger-kap-collector-headless.jaeger.svc:4318
      prometheus:
        endpoint:  ${env:MY_POD_IP}:8889
        send_timestamps: true
        metric_expiration: 180m
        enable_open_metrics: true
        resource_to_telemetry_conversion:
          enabled: true

    service:
      extensions: [health_check, memory_ballast]
      telemetry:
        metrics:
          level: detailed
          address: ${MY_POD_IP}:8888
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [spanmetrics, otlphttp] 
        metrics:
          receivers: [otlp, spanmetrics]
          processors: [memory_limiter, batch]
          exporters: [prometheus]
