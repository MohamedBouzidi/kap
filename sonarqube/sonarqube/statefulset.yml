apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
    release: sonarqube
    role: web
spec:
  replicas: 1
  serviceName: sonarqube
  selector:
    matchLabels:
      app: sonarqube
      release: sonarqube
      role: web
  template:
    metadata:
      labels:
        app: sonarqube
        release: sonarqube
        role: web
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: init-sysctl
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 150m
            memory: 150Mi
        command:
          - sh
          - -e
          - /tmp/scripts/init_sysctl.sh
        volumeMounts:
          - name: init-sysctl
            mountPath: /tmp/scripts/
      - name: wait-for-db
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 150m
            memory: 150Mi
        command: ["/bin/sh", "-c", "for i in $(seq 1 200); do nc -z -w3 $SONARQUBE_POSTGRESQL_HOST 5432 && exit 0 || sleep 2; done; exit 1"]
        envFrom:
          - configMapRef:
              name: sonarqube-database-config
      - name: ca-certs
        image: adoptopenjdk/openjdk11:alpine
        imagePullPolicy: IfNotPresent
        command: ["sh"]
        args: ["-c", "cp -f \"${JAVA_HOME}/lib/security/cacerts\" /tmp/certs/cacerts; if [ \"$(ls /tmp/secrets/ca-certs)\" ]; then for f in /tmp/secrets/ca-certs/*; do keytool -importcert -file \"${f}\" -alias \"$(basename \"${f}\")\" -keystore /tmp/certs/cacerts -storepass changeit -trustcacerts -noprompt; done; fi;"]
        securityContext:
          privileged: true
        volumeMounts:
          - mountPath: /tmp/certs
            name: sonarqube
            subPath: certs
          - mountPath: /tmp/secrets/ca-certs
            name: ca-certs
      - name: concat-properties
        image: busybox:1.32
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          #!/bin/sh
          if [ -f /tmp/props/sonar.properties ]; then
            cat /tmp/props/sonar.properties > /tmp/result/sonar.properties
          fi
          if [ -f /tmp/props/secret.properties ]; then
            cat /tmp/props/secret.properties > /tmp/result/sonar.properties
          fi
          if [ -f /tmp/props/sonar.properties -a -f /tmp/props/secret.properties ]; then
            awk 1 /tmp/props/sonar.properties /tmp/props/secret.properties > /tmp/result/sonar.properties
          fi
        volumeMounts:
        - mountPath: /tmp/props/sonar.properties
          name: config
          subPath: sonar.properties
        - mountPath: /tmp/result
          name: concat-dir
        securityContext:
          privileged: true
      - name: inject-prometheus-exporter
        image: curlimages/curl:7.76.1
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 150m
            memory: 150Mi
        command: ["/bin/sh", "-c"]
        args: ["curl -s https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.17.2/jmx_prometheus_javaagent-0.17.2.jar --output /data/jmx_prometheus_javaagent.jar -v"]
        volumeMounts:
        - mountPath: /data
          name: sonarqube
          subPath: data
      containers:
        - name: sonarqube
          image: sonarqube:10.0.0-community
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
            - name: monitoring-web
              containerPort: 8000
              protocol: TCP
            - name: monitoring-ce
              containerPort: 8001
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi
          env:
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarqube-database
                  key: jdbc-password
            - name: SONAR_WEB_SYSTEMPASSCODE
              valueFrom:
                secretKeyRef:
                  name: sonarqube-monitoring-passcode
                  key: SONAR_WEB_SYSTEMPASSCODE
          envFrom:
            - configMapRef:
                name: sonarqube-database-config
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  host="$(hostname -i || echo '127.0.0.1')"
                  if wget --no-proxy -qO- --header="X-Sonar-Passcode: $SONAR_WEB_SYSTEMPASSCODE" http://${host}:9000/api/system/health | grep -q -e '"health":"GREEN"'; then
                    exit 0
                  fi
                  exit 1
            initialDelaySeconds: 120
            periodSeconds: 10
            failureThreshold: 6
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  #!/bin/bash
                  # A Sonarqube container is considered ready if the status is UP, DB_MIGRATION_NEEDED or DB_MIGRATION_RUNNING
                  # status about migration are added to prevent the node to be kill while sonarqube is upgrading the database.
                  host="$(hostname -i || echo '127.0.0.1')"
                  if wget --no-proxy -qO- http://${host}:9000/api/system/status | grep -q -e '"status":"UP"' -e '"status":"DB_MIGRATION_NEEDED"' -e '"status":"DB_MIGRATION_RUNNING"'; then
                    exit 0
                  fi
                  exit 1
            initialDelaySeconds: 120
            periodSeconds: 10
            failureThreshold: 6
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              scheme: HTTP
              path: /api/system/status
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 24
            timeoutSeconds: 5
          securityContext:
            runAsUser: 1000
          volumeMounts:
            - mountPath: /opt/sonarqube/conf/
              name: concat-dir
            - mountPath: /opt/sonarqube/data
              name: sonarqube
              subPath: data
            - mountPath: /opt/sonarqube/certs
              name: sonarqube
              subPath: certs
            - mountPath: /opt/sonarqube/temp
              name: sonarqube
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: sonarqube
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /opt/sonarqube/conf/prometheus-config.yaml
              subPath: prometheus-config.yaml
              name: prometheus-config
            - mountPath: /opt/sonarqube/conf/prometheus-ce-config.yaml
              subPath: prometheus-ce-config.yaml
              name: prometheus-ce-config
      serviceAccountName: default
      volumes:
        - name: config
          configMap:
            name: sonarqube-config
            items:
              - key: sonar.properties
                path: sonar.properties
        - name: init-sysctl
          configMap:
            name: sonarqube-init-sysctl
            items:
              - key: init_sysctl.sh
                path: init_sysctl.sh
        - name: init-fs
          configMap:
            name: sonarqube-init-fs
            items:
              - key: init_fs.sh
                path: init_fs.sh
        - name: install-plugins
          configMap:
            name: sonarqube-install-plugins
            items:
              - key: install_plugins.sh
                path: install_plugins.sh
        - name: prometheus-config
          configMap:
            name: sonarqube-prometheus-config
            items:
              - key: prometheus-config.yaml
                path: prometheus-config.yaml
        - name: prometheus-ce-config
          configMap:
            name: sonarqube-prometheus-ce-config
            items:
              - key: prometheus-ce-config.yaml
                path: promtheus-ce-config.yaml
        - name: ca-certs
          secret:
            secretName: gitlab-ca-cert
        - name: sonarqube
          emptyDir: {}
        - name: tmp-dir
          emptyDir: {}
        - name: concat-dir
          emptyDir: {}