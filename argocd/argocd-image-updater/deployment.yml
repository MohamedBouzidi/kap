apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: argocd-image-updater
  name: argocd-image-updater
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-image-updater
    spec:
      serviceAccountName: argocd-image-updater
      initContainers:
      - name: certificates
        image: quay.io/argoprojlabs/argocd-image-updater:v0.12.2
        command: ["sh", "-c"]
        args:
          - |
            echo Adding Gitlab CA to ca-certificates
            cat /usr/local/share/ca-certificates/gitlab-ca.crt >> /etc/ssl/cert.pem
            cat /usr/local/share/ca-certificates/gitlab-ca.crt >> /etc/ssl/certs/ca-certificates.crt
            echo Updating ca-certificates
            update-ca-certificates
            echo Copying /etc/ssl/certs...
            cp -r /etc/ssl/* /tmp/ssl
        securityContext:
          runAsUser: 0
          allowPrivilegeEscalation: true
        volumeMounts:
        - name: etc-ssl-certs
          mountPath: /tmp/ssl
          readOnly: false
        - name: custom-ca-certificates
          mountPath: /usr/local/share/ca-certificates
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
      containers:
      - name: argocd-image-updater
        image: quay.io/argoprojlabs/argocd-image-updater:v0.12.2
        imagePullPolicy: IfNotPresent
        command: ["/usr/local/bin/argocd-image-updater", "run"]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 250m
            memory: 250Mi
        ports:
        - name: health
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 8081
          protocol: TCP
        env:
        - name: APPLICATIONS_API
          valueFrom:
            configMapKeyRef:
              key: applications_api
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_GRPC_WEB
          valueFrom:
            configMapKeyRef:
              key: argocd.grpc_web
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_SERVER
          valueFrom:
            configMapKeyRef:
              key: argocd.server_addr
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_INSECURE
          valueFrom:
            configMapKeyRef:
              key: argocd.insecure
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_PLAINTEXT
          valueFrom:
            configMapKeyRef:
              key: argocd.plaintext
              name: argocd-image-updater-config
              optional: true
        - name: ARGOCD_TOKEN
          valueFrom:
            secretKeyRef:
              key: argocd.token
              name: argocd-image-updater-secret
              optional: true
        - name: IMAGE_UPDATER_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              key: log.level
              name: argocd-image-updater-config
              optional: true
        - name: GIT_COMMIT_USER
          valueFrom:
            configMapKeyRef:
              key: git.user
              name: argocd-image-updater-config
              optional: true
        - name: GIT_COMMIT_EMAIL
          valueFrom:
            configMapKeyRef:
              key: git.email
              name: argocd-image-updater-config
              optional: true
        - name: IMAGE_UPDATER_KUBE_EVENTS
          valueFrom:
            configMapKeyRef:
              key: kube.events
              name: argocd-image-updater-config
              optional: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        volumeMounts:
        - name: image-updater-conf
          mountPath: /app/config
        - name: ssh-known-hosts
          mountPath: /app/config/ssh
        - name: ssh-config
          mountPath: /app/.ssh
        - name: etc-ssl-certs
          mountPath: /etc/ssl/
          readOnly: true
        - name: custom-ca-certificates
          mountPath: /usr/local/share/ca-certificates
          readOnly: true
      volumes:
      - name: image-updater-conf
        configMap:
          name: argocd-image-updater-config
          items:
          - key: registries.conf
            path: registries.conf
          - key: git.commit-message-template
            path: commit.template
          optional: true
      - name: ssh-known-hosts
        configMap:
          name: argocd-ssh-known-hosts-cm
          optional: true
      - name: ssh-config
        configMap:
          name: argocd-image-updater-ssh-config
          optional: true
      - name: etc-ssl-certs
        emptyDir:
          medium: "Memory"
      - name: custom-ca-certificates
        secret:
          secretName: gitlab-ca-cert
          items:
          - key: gitlab-dev-local
            path: gitlab-ca.crt