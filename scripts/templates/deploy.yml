apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}
  namespace: ${PROJECT_NAME}
  labels:
    app: ${APP_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${APP_NAME}
  template:
    metadata:
      labels:
        app: ${APP_NAME}
      annotations:
        app.platform/service: ${APP_NAME}
        app.platform/project: ${PROJECT_NAME}
        app.platform/version: ${VERSION}
    spec:
      containers:
        - name: app
          image: registry.dev.local/${PROJECT_NAME}/${APP_NAME}:${VERSION}
          ports:
          - containerPort: 8090
            protocol: TCP
            name: web
          env:
          - name: APP_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['app.platform/service']
          - name: PROJECT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['app.platform/project']
          - name: APP_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['app.platform/version']
          - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
            value: opentelemetry-collector.monitoring.svc:4318
          - name: OTEL_EXPORTER_OTLP_METRICS_ENDPOINT
            value: opentelemetry-collector.monitoring.svc:4318
      imagePullSecrets:
      - name: ${APP_NAME}-regcred
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}-service
  namespace: ${PROJECT_NAME}
spec:
  selector:
    app: ${APP_NAME}
  ports:
  - name: web
    port: 8090
    protocol: TCP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ${APP_NAME}-ingress
  namespace: app-ingress
  annotations:
    kubernetes.io/ingress.class: "traefik-ingress"
    cert-manager.io/cluster-issuer: kap-vault-issuer
    cert-manager.io/common-name: ${APP_NAME}.app.dev.local
    cert-manager.io/private-key-algorithm: "ECDSA"
spec:
  entryPoints:
  - websecure
  routes:
    - kind: Rule
      match: Host(`${APP_NAME}.app.dev.local`) && PathPrefix(`/`)
      services:
      - name: ${APP_NAME}-service
        namespace: ${PROJECT_NAME}
        port: web
  tls:
    hosts:
    - ${APP_NAME}.app.dev.local
    secretName: ${APP_NAME}-app-cert
