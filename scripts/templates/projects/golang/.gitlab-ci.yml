image: golang:latest

variables:
  GITLAB_CA:  "/tmp/gitlab-runner/certs/gitlab/ca.crt"
  SONARQUBE_CA: "/tmp/gitlab-runner/certs/sonarqube/ca.crt"

stages:
  - test
  - build
  - deploy

sonarqube-check:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:4.8.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  before_script:
    - mkdir -p ${SONAR_USER_HOME} && chown -R scanner-cli:scanner-cli ${SONAR_USER_HOME}
    - keytool -importcert -file "${GITLAB_CA}" -alias gitlab -cacerts -storepass changeit -trustcacerts -noprompt
    - keytool -importcert -file "${SONARQUBE_CA}" -alias sonarqube -cacerts -storepass changeit -trustcacerts -noprompt
    - mkdir .scannerwork && chown 1000:1000 .scannerwork
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'


.format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

.compile:
  stage: build
  script:
    - mkdir -p mybinaries
    - go build -o mybinaries ./...
  artifacts:
    paths:
      - mybinaries

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.1-debug
    entrypoint: [""]
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
      --registry-certificate "${CI_REGISTRY}=${GITLAB_CA}"

.deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production

