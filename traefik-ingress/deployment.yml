---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-ingress-controller
  namespace: traefik
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/instance: traefik-ingress-controller-traefik
    helm.sh/chart: traefik-20.5.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    sidecar.jaegertracing.io/inject: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
      app.kubernetes.io/instance: traefik-ingress-controller-traefik
  strategy: 
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 0
  template: 
    metadata:
      # annotations:
      #   prometheus.io/scrape: "true"
      #   prometheus.io/path: "/metrics"
      #   prometheus.io/port: "9100"
      #   sidecar.jaegertracing.io/inject: "true"
      labels:
        app.kubernetes.io/name: traefik
        app.kubernetes.io/instance: traefik-ingress-controller-traefik
        helm.sh/chart: traefik-20.5.2
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      hostNetwork: false
      containers:
      - image: traefik:v2.9.5
        imagePullPolicy: IfNotPresent
        name: traefik-ingress-controller
        args: ["--configfile", "/etc/traefik.yml"]
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "300m"
            memory: "150Mi"
        readinessProbe:
          httpGet:
            path: /ping
            port: 9000
            scheme: HTTP
          failureThreshold: 1
          initialDelaySeconds: 2
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: 9000
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 2
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - name: "metrics"
          containerPort: 9100
          protocol: "TCP"
        - name: "traefik"
          containerPort: 9000
          protocol: "TCP"
        - name: "web"
          containerPort: 8000
          protocol: "TCP"
        - name: "websecure"
          containerPort: 8443
          protocol: "TCP"
        securityContext:
          capabilities:
            drop:
            - ALL
          # readOnlyRootFilesystem: true
          runAsGroup: 65532
          # runAsNonRoot: true
          runAsUser: 65532
        volumeMounts:
          - name: data
            mountPath: /data
          - name: tmp
            mountPath: /tmp
          - name: traefik-config
            mountPath: /etc/traefik.yml
            subPath: traefik.yml
            readOnly: true
      volumes:
        - name: data
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: traefik-config
          configMap:
            name: traefik-config
      securityContext:
        fsGroup: 65532
